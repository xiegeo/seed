// generated by go run github.com/globusdigital/deep-copy --type I18n --type Thing --type Field --type Object --type Domain -o gen_deep_copy.go .; DO NOT EDIT.

package seed

import (
	"golang.org/x/text/language"
)

// DeepCopy generates a deep copy of I18n
func (o I18n[T]) DeepCopy() I18n[T] {
	var cp I18n[T] = o
	if o != nil {
		cp = make(map[language.Tag]T, len(o))
		for k, v := range o {
			cp[k] = v
		}
	}
	return cp
}

// DeepCopy generates a deep copy of Thing
func (o Thing) DeepCopy() Thing {
	var cp Thing = o
	if o.Label != nil {
		cp.Label = make(map[language.Tag]string, len(o.Label))
		for k2, v2 := range o.Label {
			cp.Label[k2] = v2
		}
	}
	if o.Discription != nil {
		cp.Discription = make(map[language.Tag]string, len(o.Discription))
		for k2, v2 := range o.Discription {
			cp.Discription[k2] = v2
		}
	}
	return cp
}

// DeepCopy generates a deep copy of Field
func (o Field) DeepCopy() Field {
	var cp Field = o
	cp.Thing = o.Thing.DeepCopy()
	return cp
}

// DeepCopy generates a deep copy of Object
func (o Object) DeepCopy() Object {
	var cp Object = o
	cp.Thing = o.Thing.DeepCopy()
	if o.Fields != nil {
		cp.Fields = make([]Field, len(o.Fields))
		copy(cp.Fields, o.Fields)
		for i2 := range o.Fields {
			cp.Fields[i2] = o.Fields[i2].DeepCopy()
		}
	}
	return cp
}

// DeepCopy generates a deep copy of Domain
func (o Domain) DeepCopy() Domain {
	var cp Domain = o
	cp.Thing = o.Thing.DeepCopy()
	if o.Objects != nil {
		cp.Objects = make([]Object, len(o.Objects))
		copy(cp.Objects, o.Objects)
		for i2 := range o.Objects {
			cp.Objects[i2] = o.Objects[i2].DeepCopy()
		}
	}
	return cp
}
