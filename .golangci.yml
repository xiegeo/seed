
# golangci-lint run (v1.49.0)

linters-settings:
  govet:
    check-shadowing: true
    # Enable all analyzers.
    # Default: false
    enable-all: true
  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    # Default: 5
    max-distance: 15
    # Optional list of variable names that should be ignored completely.
    # Default: []
    ignore-names: [vt,tx,db]
  wrapcheck:
    # An array of strings that specify globs of packages to ignore.
    # Default: []
    ignorePackageGlobs:
      - github.com/xiegeo/seed # not external
      - github.com/cockroachdb/errors/* # error tools
      - database/sql # todo
      - context
      - time
    # An array of strings that specify regular expressions of interfaces to ignore.
    # Default: []
    ignoreInterfaceRegexps:
      - context.Context # ignore again as interface
  gci:
    # Default: ["standard", "default"]
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/xiegeo/seed) # Custom section: groups all imports with the specified Prefix.
      - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
      - dot # Dot section: contains all dot imports. This section is not present unless explicitly enabled.
    # Enable custom order of sections.
    # If `true`, make the section order the same as the order of `sections`.
    # Default: false
    custom-order: true
  gomnd:
    # List of numbers to exclude from analysis.
    # The numbers should be written as string.
    # Values always ignored: "1", "1.0", "0" and "0.0"
    # Default: []
    ignored-numbers:
      - '2'

linters:
  enable-all: true # use new linters by default when golangci-lint upgrades, lets not miss any good ideas
  disable:
    # disabled because of generics (last checked: 2022-10-29 https://github.com/golangci/golangci-lint/issues/2649)
    - rowserrcheck
    - sqlclosecheck
    - wastedassign

    # noisy linters
    - exhaustruct # intentionally use zero value 
    - ireturn # seed has lots of dynamic code that can only return interfaces
    - gochecknoglobals # check that no global variables exist
    - gochecknoinits # Checks that no init functions are present in Go code
    - paralleltest # only need to care when tests take a long time.
    - nonamedreturns # name returns can add clarity to function signatures, or save declare a variable just to hold return variable.

    # style linters that's better replaced by eyeballs
    - wsl # enforce blank line rules
    - nlreturn # new line before return
    - lll # long lines
    - godot # Check if comments end in a period

    # officially deprecated
    - nosnakecase
    - maligned
    - exhaustivestruct
    - deadcode
    - ifshort
    - varcheck
    - interfacer
    - structcheck
    - golint
    - scopelint

issues:
  exclude-rules:
  # revisit after dictionary rewrite
    - text: "fieldalignment: struct with .* pointer bytes could be .*"
      linters: [govet]

  # case by case, but not worse
    - text: "( MakeDirectedCondition is 11,)|( timeStampFailback is 11,)"
      linters:
        - cyclop

  # exception to a style
    - text: "_SQLITE_" # "_" allowed for external constants
      linters:
        - revive
        - stylecheck

  # expand on linter-settings
    - text: "parameter name .* is too short for the scope of its usage"
      linters:
        - varnamelen # don't check parameter names

    - text: "missing cases in switch of type reflect.Kind"
      linters:
        - exhaustive
    
    - text: "fieldalignment: struct with .* pointer bytes could be .*"
      linters:
        - 

  # tests and demo rules
    - path: "(.+)_test.go"
      linters:
        - maintidx
        - unused
        
    - path: "(.+)_test.go"
      linters:
        - govet
      text: "declaration of \"t\" shadows declaration"

    - path: "demo"
      linters:
        - gomnd # magic numbers allowed in demo
        - varnamelen

output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.json,colored-line-number"
  #
  # Default: colored-line-number
  # format: line-number # use this when color breaks stuff

  # Sort results by: filepath, line and column.
  sort-results: true # Stable output. otherwise a problem line might jump around when one of many in the same line is fixed or ignored.
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false

# Allow multiple parallel golangci-lint instances running.
# If false (default) - golangci-lint acquires file lock on start.
allow-parallel-runners: true # allow usage when IDE is also running a lint